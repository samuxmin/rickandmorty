{"version":3,"sources":["Components/LoadingPage/LoadingPage.jsx","Components/Characters/CharacterCard/charCardStyles.js","helpers/handleDate.js","Components/Characters/CharacterCard/CharacterCard.jsx","styles/styles.js","helpers/fetch.js","helpers/handlePageChange.js","Components/Characters/Characters.jsx","Components/Episodes/EpisodeCard/EpisodeCard.jsx","Components/CharacterScreen/characterScreenStyles.js","Components/CharacterScreen/CharacterScreen.jsx","Components/Episodes/EpisodeCharacters/EpisodeCharacters.jsx","Components/Episodes/Episodes.jsx","Components/Footer/footerStyles.js","Components/Footer/Footer.jsx","Components/Locations/LocationCharacters/LocationCharacters.jsx","Components/Locations/LocationCard/locationCardStyles.js","Components/Locations/LocationCard/LocationCard.jsx","Components/Locations/Locations.jsx","Components/Navbar/navbarStyles.js","Components/Navbar/Navbar.jsx","Router/AppRouter.js","App.jsx","index.js"],"names":["useStyles","makeStyles","theme","root","display","marginLeft","spacing","width","height","alignItems","justifyContent","LoadingPage","classes","mx","className","CircularProgress","media","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","genderText","handleDate","date","dateConverted","Date","getMonth","getDate","getFullYear","CharacterCard","character","useState","expanded","setExpanded","Grid","item","xs","sm","md","lg","Card","CardHeader","title","name","subheader","status","species","CardMedia","image","CardContent","Typography","variant","color","gender","Icon","handleGenderIcon","Link","href","origin","url","CardActions","disableSpacing","id","IconButton","clsx","onClick","Collapse","in","timeout","unmountOnExit","paragraph","type","location","created","centerContent","fetchCardInfo","cardType","page","a","fetch","then","resp","json","data","chars","console","log","getCharacterFromUrl","charUrl","char","fetchIndividualCharacters","i","characters","length","episode","residents","fecthCharacterEpisodes","episodesUrls","eps","handlePageChange","action","thisPage","max","history","Swal","fire","push","window","scrollTo","top","behavior","Characters","setCharacters","useParams","useHistory","parseInt","setThisPage","useEffect","results","getCharacters","align","gutterBottom","container","map","c","Hidden","xsDown","Button","component","to","EpisodeCard","air_date","RouterLink","main","margin","characterImage","border","borderRadius","flexDirection","characterInfo","fontSize","returnBtn","marginTop","marginBottom","CharacterScreen","setCharacter","setLocation","setOrigin","loading","setLoading","episodes","setEpisodes","getEpisodes","epUrl","getLocation","locationUrl","loc","getOrigin","originUrl","orig","charId","getCharacter","src","alt","dimension","goBack","fullWidth","e","EpisodeCharacters","episodeES","setEpisodeES","getEpisodeCharacters","Episodes","background","backgroundSize","backgroundRepeat","Footer","Box","mt","target","direction","LocationCharacters","locationName","setLocationName","getLocationCharacters","LocationCard","Locations","locations","setLocations","locat","getLocations","l","flexGrow","menuButton","marginRight","textDecoration","offset","mixins","toolbar","Navbar","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","style","backgroundColor","Toolbar","mdUp","edge","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","smDown","AppRouter","exact","path","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f766f2ed.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n    width:'100vw',\n    height:'200px',\n    alignItems:'center',\n    justifyContent:'center'\n  },\n}));\nconst LoadingPage = () => {\n  const classes = useStyles();\n\n  return (\n    <div mx=\"auto\" className={classes.root} >\n      <CircularProgress />\n    </div>\n  );\n}\nexport default LoadingPage","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles((theme) => ({\n  root: {\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  genderText: {\n    display: 'flex',\n    alignItems: 'baseline',\n  }\n}));\n","export const handleDate = (date) => {\n  const dateConverted = new Date(date);\n  let dateParsed = `${\n    dateConverted.getMonth() + 1\n  }-${dateConverted.getDate()}-${dateConverted.getFullYear()}`;\n  return dateParsed;\n};\n","import React, {useState} from 'react'\nimport { Card, CardActions, CardContent, CardHeader, CardMedia, Collapse, Grid, Icon, IconButton, Link, Typography } from '@material-ui/core'\nimport useStyles from './charCardStyles'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport clsx from 'clsx'\nimport { handleDate } from '../../../helpers/handleDate'\n\nconst CharacterCard = ({character}) => {\n\n    const classes = useStyles()\n    const [expanded, setExpanded] = useState(false);\n\n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    }\n\n    const handleGenderIcon = (gender) => {\n        switch (gender) {\n            case 'Male':\n                return <><Icon className=\"fas fa-mars\" color=\"primary\" /> Male</>;\n                \n            case 'Female':\n            return <><Icon className=\"fas fa-venus\" color=\"secondary\" /> Female</>;\n        \n            default:\n                return gender;\n        }\n    }\n\n    return(\n        <Grid item xs={12} sm={6} md={4} lg={3}>\n            <Card className={classes.root}>\n                <CardHeader\n                    title={character.name}\n                    subheader={'Status: ' + character.status + ' - Species: ' + character.species}\n                />\n                <CardMedia\n                    className={classes.media}\n                    image={character.image}\n                    title={character.name}\n                />\n                <CardContent>\n                    <Typography variant=\"body1\" color=\"textSecondary\" className={classes.genderText}>\n                    {handleGenderIcon(character.gender)}\n                    </Typography>\n                    <Typography variant='body1' color='textSecondary'>\n                    Origin: <Link color='textSecondary' href={character.origin.url}>{character.origin.name}</Link>\n                    <br/>\n                    </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <Link href={`/character/view/${character.id}`} mx={2}>View Character</Link>\n                    <IconButton\n                    className={clsx(classes.expand, {\n                        [classes.expandOpen]: expanded,\n                    })}\n                    onClick={handleExpandClick}\n                    aria-expanded={expanded}\n                    aria-label=\"show more\"\n                    >\n                    <ExpandMoreIcon />\n                    </IconButton>\n                </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n            <Typography paragraph color='textSecondary'\n                >{character.type}\n                <br/>\n                Last location known: <Link color='textSecondary' href={character.location.url}>{character.location.name}</Link>\n                <br/>\n                {character.type}\n                <br/>\n                Created: {handleDate(character.created)}\n            </Typography>\n            </CardContent>\n        </Collapse>\n        </Card>\n        </Grid>\n    )\n}\n\nexport default CharacterCard","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles((theme) => ({\n  centerContent: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));","export const fetchCardInfo = async (cardType, page) => {\n  let chars;\n  try {\n    chars = await fetch(\n      `https://rickandmortyapi.com/api/${cardType}?page=${page}`\n    )\n      .then((resp) => resp.json())\n      .then((data) => data);\n  } catch (error) {\n    console.log(error);\n  }\n  return chars;\n};\n\nexport const getCharacterFromUrl = async (charUrl) => {\n  const char = await fetch(charUrl)\n    .then((resp) => resp.json())\n    .then((data) => data);\n  return await char;\n};\n\nexport const fetchIndividualCharacters = async (type, id) => {\n  let chars = [];\n  let title = '';\n  try {\n    const data = await fetch(`https://rickandmortyapi.com/api/${type}/${id}`)\n      .then((resp) => resp.json())\n      .then((data) => data);\n    if (type === 'episode') {\n      for (let i = 0; i < data.characters.length; i++) {\n        chars[i] = await getCharacterFromUrl(data.characters[i]);\n      }\n      title = data.episode;\n    } else if (type === 'location') {\n      for (let i = 0; i < data.residents.length; i++) {\n        chars[i] = await getCharacterFromUrl(data.residents[i]);\n      }\n      title = data.name;\n    }\n    return [chars, title];\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fecthCharacterEpisodes = async (episodesUrls) => {\n  let eps = [];\n  try {\n    for (let i = 0; i < episodesUrls.length; i++) {\n      eps[i] = await getCharacterFromUrl(episodesUrls[i]);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return eps\n};\n","import Swal from 'sweetalert2';\n\nexport const handlePageChange = (action, thisPage, max = 100, history) => {\n  if (action === 'next') {\n    if (thisPage >= max) {\n      return Swal.fire('This is the last page', 'You cant go forward', 'error');\n    }\n    history.push(`${thisPage + 1}`);\n  } else if (action === 'prev') {\n    if (thisPage <= 1) {\n      return Swal.fire('This is the first page', 'You cant go back', 'error');\n    }\n    history.push(`${thisPage - 1}`);\n  }\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n};\n","import { Button, Grid, Hidden, IconButton, Typography } from '@material-ui/core'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\nimport React, { useEffect, useState } from 'react'\nimport LoadingPage from '../LoadingPage/LoadingPage'\nimport CharacterCard from './CharacterCard/CharacterCard'\nimport useStyles from '../../styles/styles'\nimport { fetchCardInfo } from '../../helpers/fetch'\nimport { Link, useParams, useHistory } from 'react-router-dom'\nimport { handlePageChange } from '../../helpers/handlePageChange'\n\nconst Characters = () => {\n    const [characters, setCharacters] = useState([])\n    \n    const { page } = useParams()\n    let history = useHistory()\n    const [thisPage, setThisPage] = useState(parseInt(page))\n    \n    useEffect(()=>{\n        setThisPage(parseInt(page))\n    }, [page])\n\n    const classes = useStyles()\n    \n    \n    useEffect(()=>{\n        const getCharacters = async () => {\n            let chars = await fetchCardInfo('character', thisPage)\n            setCharacters(chars.results)\n        }\n        getCharacters()\n    }, [thisPage])\n\n    return characters.length === 0 ? <LoadingPage/> : (\n        <>\n            <Typography variant='h2' align=\"center\" gutterBottom>Characters</Typography>\n            <Typography variant=\"h4\" align='center' gutterBottom>\n                <IconButton color='primary' aria-label=\"Previous page\" onClick={()=>{handlePageChange('prev',thisPage, 34, history)}}><ArrowBackIcon /></IconButton>\n                Page {thisPage}\n                <IconButton color='primary' aria-label=\"Next page\" onClick={()=>{handlePageChange('next', thisPage, 34, history)}}><ArrowForwardIcon /></IconButton>\n            </Typography>\n            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n                {characters.map(c=> <CharacterCard key={c.id} character={c} />)}\n            </Grid>\n            <div className={classes.centerContent}>\n                {thisPage !==1 && <IconButton aria-label=\"Previous page\" color='primary' onClick={()=>{handlePageChange('prev',thisPage, 34, history)}}><ArrowBackIcon /></IconButton>}\n                <Hidden xsDown>\n                {thisPage > 4 && <Button>...</Button>}\n                    <Button onClick={handlePageChange} component={Link} to={`/characters/${thisPage> 3? thisPage - 3: 1}`}>{thisPage> 3? thisPage - 3: 1}</Button>\n                    <Button onClick={handlePageChange} component={Link} to={`/characters/${thisPage> 3? thisPage - 2: 2}`}>{thisPage> 3? thisPage - 2: 2}</Button>\n                    <Button onClick={handlePageChange} component={Link} to={`/characters/${thisPage> 3? thisPage - 1: 3}`}>{thisPage> 3? thisPage - 1: 3}</Button>\n                    <Button onClick={handlePageChange} component={Link} to={`/characters/${thisPage> 3? thisPage: 4}`}>{thisPage> 3? thisPage : 4}</Button>\n                    {thisPage < 34 && <Button component={Link} onClick={handlePageChange} to={`/characters/${thisPage >3? thisPage + 1 : 5}`}>{thisPage> 3? thisPage + 1: 5}</Button>}\n                    {thisPage < 33 && <Button component={Link} onClick={handlePageChange} to={`/characters/${thisPage >3? thisPage + 2 : 6}`}>{thisPage> 3? thisPage + 2: 6}</Button>}\n                    {thisPage < 32 && <Button component={Link} onClick={handlePageChange} to={`/characters/${thisPage >3? thisPage + 3 : 7}`}>{thisPage> 3? thisPage + 3: 7}</Button>}\n                {thisPage < 31 && <Button>...</Button>}\n                </Hidden>\n                {thisPage !== 34 && <IconButton aria-label=\"Next page\" color='primary' onClick={()=>{handlePageChange('next',thisPage ,34, history)}}><ArrowForwardIcon /></IconButton>}\n            </div>\n        </>\n    )\n}\n\nexport default Characters\n","import { Card, CardContent, CardHeader, Grid, Link, Typography } from '@material-ui/core';\nimport {Link as RouterLink} from 'react-router-dom'\nimport React from 'react'\nimport { handleDate } from '../../../helpers/handleDate';\n\nconst EpisodeCard = ({ episode }) => {\n\n    return (\n        <Grid item xs={12} sm={6} md={4} lg={3}>\n        <Card >\n            <CardHeader\n                title={episode.name}\n            />\n            <CardContent>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                    On air: {episode.air_date}\n                    <br/>\n                    Episode: {episode.episode} \n                    <br/>\n                    Created: {handleDate(episode.created)}\n                    <br/>\n                    <Link component={RouterLink} to={`/episode/${episode.id}/characters`}>View characters</Link>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n    )\n}\n\n\nexport default EpisodeCard\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles((theme) => ({\n  main: {\n    margin: '50px auto 20px auto',\n  },\n  characterImage: {\n    border: '2px solid #53abee',\n    borderRadius: '4px',\n    width: '300px',\n  },\n  centerContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  characterInfo: {\n    fontSize: '20px',\n  },\n  returnBtn: {\n    marginTop: '15px',\n    marginBottom: '40px',\n  },\n}));\n","import { Button, Grid,  Link,  Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport { useHistory, useParams, Link as RouterLink} from 'react-router-dom'\nimport { fecthCharacterEpisodes, getCharacterFromUrl } from '../../helpers/fetch'\nimport { handleDate } from '../../helpers/handleDate'\nimport EpisodeCard from '../Episodes/EpisodeCard/EpisodeCard'\nimport LoadingPage from '../LoadingPage/LoadingPage'\nimport useStyles from './characterScreenStyles'\n\n\nexport const CharacterScreen = () => {\n    let history = useHistory()\n    const classes = useStyles()\n    const {id} = useParams()\n    const [character, setCharacter] = useState({})\n\n    const [location, setLocation] = useState({})\n    const [origin, setOrigin] = useState({})\n\n    const [loading, setLoading] = useState(true)\n    \n\n    \n    const {name, image, status, species, type, gender} = character\n    const [episodes, setEpisodes] = useState([]);\n\n    const getEpisodes = async (epUrl) => {\n        let eps = await fecthCharacterEpisodes(epUrl)\n        setEpisodes(eps)\n\n    }\n    const getLocation = async (locationUrl) => {\n        if(locationUrl === ''){\n            return setLocation({name:'Unknown'})\n        }\n        const loc = await getCharacterFromUrl(locationUrl)\n        setLocation(loc)\n    }\n    const getOrigin = async (originUrl) => {\n        if(originUrl === ''){\n            return setOrigin({name:'Unknown'})\n        }\n        const orig = await getCharacterFromUrl(originUrl)\n        setOrigin(orig)\n    }\n\n    const handleReturn = () => {\n        if (history.length <= 2) {\n          history.push(\"/\");\n        } else {\n          history.goBack();\n        }\n      };\n    \n    useEffect(()=> {\n        const getCharacter = async (charId) => {\n            let char = await getCharacterFromUrl(`https://rickandmortyapi.com/api/character/${charId}`);\n            setCharacter(char);\n            getEpisodes(char.episode);\n            getLocation(char.location.url);\n            getOrigin(char.origin.url)\n            setLoading(false)\n        }\n        getCharacter(id)\n    },[id])\n\n\n    return (\n        loading ? <LoadingPage /> : <>\n            <Grid container alignItems='center' justifyContent='space-evenly' className={classes.main}>\n                <Grid item xs={12} sm={6} md={6} className={classes.centerContent}>\n                    <Typography variant='h4' align='center' gutterBottom>{name}</Typography>\n                    <img src={image} className={classes.characterImage} alt={name} />\n                </Grid>\n                <Grid item xs={12} sm={6} md={6}  className={classes.centerContent}>\n                   <div className={classes.characterInfo}>\n                       <ul>\n                            <li>Name: {name}</li>\n                            <li>Status: {status}</li>\n                            { type && <li>Type: {type}</li>}\n                            <li>Species: {species}</li>\n                            <li>Gender: {gender}</li>\n                            <li>Origin: {origin.name}\n                           { origin.name !== 'Unknown' && \n                                <Typography  color=\"textSecondary\">\n                                    Dimension: {origin.dimension}\n                                    <br/>\n                                    Type: {origin.type} \n                                    <br/>\n                                    Created: {handleDate(origin.created)}\n                                    <br/>\n                                    <Link component={RouterLink} to={`/location/${origin.id}/characters`}>View location characters</Link>\n                                </Typography>}\n                            </li>\n                            <li>Location: {location.name}\n                           {location.name !== 'Unknown' && \n                                <Typography variant=\"body1\" color=\"textSecondary\">\n                                    Dimension: {location.dimension}\n                                    <br/>\n                                    Type: {location.type} \n                                    <br/>\n                                    Created: {handleDate(location.created)}\n                                    <br/>\n                                    <Link component={RouterLink} to={`/location/${location.id}/characters`}>View location characters</Link>\n                                </Typography>\n                            }\n                            </li>\n                        </ul>\n                   </div>\n                </Grid>\n            </Grid>\n                    <Button color='secondary' variant='outlined' onClick={handleReturn} fullWidth className={classes.returnBtn}>go back</Button>\n            <Typography align='center' variant='h4' paragraph>Episodes</Typography>\n            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n                {episodes.length>0 \n                    ? episodes.map(e=> <EpisodeCard key={e.id} episode={e} />)\n                    :<LoadingPage />\n                }\n            </Grid>\n        </>\n    )\n}\n","import { Grid, Typography } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { fetchIndividualCharacters } from '../../../helpers/fetch'\n\nimport CharacterCard from '../../Characters/CharacterCard/CharacterCard'\nimport LoadingPage from '../../LoadingPage/LoadingPage'\n\nconst EpisodeCharacters = () => {\n    let {episode} = useParams()\n    \n      \n    const [characters, setCharacters] = useState([])\n    const [episodeES, setEpisodeES] = useState('')\n    \n    useEffect(() => {\n        const getEpisodeCharacters = async ()=> {\n            let data = await fetchIndividualCharacters('episode', episode)\n            setCharacters(data[0])\n            setEpisodeES(data[1])\n        }\n        getEpisodeCharacters()\n    }, [episode])\n\n\n    return characters.length === 0 \n    ? <LoadingPage/> \n    :<><Typography align='center' variant='h3' gutterBottom>\n    {episodeES} Characters\n    </Typography> \n     <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n        {characters.map(c => <CharacterCard key={c.id} character={c} />)}\n            </Grid>\n            </>\n}\n\nexport default EpisodeCharacters\n","import { Grid, IconButton, Typography } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\nimport LoadingPage from '../LoadingPage/LoadingPage'\nimport EpisodeCard from './EpisodeCard/EpisodeCard'\nimport useStyles from '../../styles/styles'\nimport { Button } from '@material-ui/core'\nimport { fetchCardInfo } from '../../helpers/fetch'\nimport { Link, useHistory, useParams } from 'react-router-dom'\nimport { handlePageChange } from '../../helpers/handlePageChange'\n\nconst Episodes = () => {\n    const [episodes, setEpisodes] = useState([])\n    \n    const { page } = useParams()\n    let history = useHistory()\n    const [thisPage, setThisPage] = useState(parseInt(page))\n\n    useEffect(()=>{\n        setThisPage(parseInt(page))\n    }, [page])\n\n\n    const classes = useStyles()\n    \n    useEffect(()=>{\n    const getEpisodes = async () => {\n            const eps = await fetchCardInfo('episode', thisPage)\n            setEpisodes(eps.results)\n    }\n    getEpisodes()\n}, [thisPage])\n\nreturn episodes.length === 0 ? <LoadingPage/> : (\n        <>\n            <Typography variant='h2' align=\"center\" gutterBottom>Episodes</Typography>\n            <Typography variant=\"h4\" align='center' gutterBottom>\n                <IconButton color='primary' aria-label=\"Previous page\" onClick={() => {handlePageChange('prev',thisPage,3,history)}}><ArrowBackIcon /></IconButton>\n                Page {thisPage}\n                <IconButton color='primary' aria-label=\"Next page\" onClick={() => {handlePageChange('next',thisPage,3,history)}}><ArrowForwardIcon /></IconButton>\n            </Typography>\n            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n                {episodes.map(e=> <EpisodeCard key={e.id} episode={e} />)}\n            </Grid>\n            <div className={classes.centerContent}>\n               {thisPage !==1 && <IconButton aria-label=\"Previous page\" color='primary' onClick={() => {handlePageChange('prev', thisPage, 4, history)}}><ArrowBackIcon /></IconButton>}\n                    <Button onClick={handlePageChange} component={Link} to='/episodes/1'>1</Button>\n                    <Button onClick={handlePageChange} component={Link} to='/episodes/2'>2</Button>\n                    <Button onClick={handlePageChange} component={Link} to='/episodes/3'>3</Button>\n                {thisPage!==3 && <IconButton aria-label=\"Next page\" color='primary' onClick={() => {handlePageChange('next', thisPage, 4, history)}}><ArrowForwardIcon /></IconButton>}\n            </div>\n        </>\n    )\n}\n\nexport default Episodes\n","import { makeStyles } from '@material-ui/core';\n\n\nexport default makeStyles(() => ({\n  root: {\n    background: 'url(/assets/footer.png) right',\n    backgroundSize: '200px',\n    backgroundRepeat: 'no-repeat',\n    height: '200px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n  },\n}));","import React from 'react'\nimport { Box, Grid, IconButton, Link, Typography } from '@material-ui/core'\nimport useStyles from './footerStyles'\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport InstagramIcon from '@material-ui/icons/Instagram';\n\nconst Footer = () => {\n\n    const classes = useStyles()\n\n    return (\n        <Box mt={2} mx={0} className={classes.root} id='footer'>\n            <Typography align='center' variant='h6'>Page made by <Link href='https://samuxmin.github.io' target='_blank'>samuxmin</Link></Typography>\n            <Typography align='center' variant='body2'>Using <Link href='https://rickandmortyapi.com/' target='_blank'>Rick and Morty API</Link></Typography>\n            <Typography align='center' variant='body2'>\n                <Link href='https://github.com/samuxmin/rickandmorty' target='_blank'>View source code</Link>\n            </Typography>\n            <Grid \n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\">\n                <IconButton aria-label='github' >\n                    <Link color='inherit' href='https://github.com/samuxmin' target='_blank'>\n                        <GitHubIcon />\n                    </Link>\n                </IconButton>\n                <IconButton aria-label='linkedin'>\n                    <Link color='inherit' href='https://www.linkedin.com/in/samuel-mindler-81309220b/' target='_blank'>\n                        <LinkedInIcon />\n                    </Link>\n                </IconButton>\n                <IconButton aria-label='instagram'>\n                    <Link color='inherit' href='https://www.instagram.com/goinginsanewtf/' target='_blank'>\n                        <InstagramIcon/>\n                    </Link>\n                </IconButton>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default Footer\n","import { Grid, Typography } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { fetchIndividualCharacters } from '../../../helpers/fetch'\n\nimport CharacterCard from '../../Characters/CharacterCard/CharacterCard'\nimport LoadingPage from '../../LoadingPage/LoadingPage'\n\nconst LocationCharacters = () => {\n    let {location} = useParams()\n    \n    \n\n    const [characters, setCharacters] = useState([])\n    const [locationName, setLocationName] = useState('')\n    \n    useEffect(() => {\n        const getLocationCharacters = async ()=> {\n            let data = await fetchIndividualCharacters('location', location)\n            setCharacters(data[0])\n            setLocationName(data[1])\n        }\n        getLocationCharacters()\n    }, [location])\n\n\n    return characters.length === 0 \n    ? <LoadingPage/> \n    :<>\n    <Typography align='center' variant='h3' gutterBottom>\n        {locationName} Characters\n    </Typography> \n    <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n        {characters.map(c => <CharacterCard key={c.id} character={c} />)}\n            </Grid></>\n}\n\nexport default LocationCharacters\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme=> ({\n\n}))","import { Card, CardContent, CardHeader, Grid, Link, Typography } from '@material-ui/core';\nimport {Link as RouterLink} from 'react-router-dom'\nimport React from 'react'\nimport useStyles from './locationCardStyles'\nimport { handleDate } from '../../../helpers/handleDate';\n\nconst LocationCard = ({ location }) => {\n    const classes = useStyles()\n\n    return (\n        <Grid item xs={12} sm={6} md={4} lg={3}>\n        <Card className={classes.root}>\n            <CardHeader\n                title={location.name}\n            />\n            <CardContent>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                    Dimension: {location.dimension}\n                    <br/>\n                    Type: {location.type} \n                    <br/>\n                    Created: {handleDate(location.created)}\n                    <br/>\n                    <Link component={RouterLink} to={`/location/${location.id}/characters`}>View characters</Link>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n    )\n}\n\n\nexport default LocationCard\n","import { Button, Grid, IconButton, Typography, Hidden } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport LocationCard from './LocationCard/LocationCard'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\nimport LoadingPage from '../LoadingPage/LoadingPage'\nimport useStyles from '../../styles/styles'\nimport { fetchCardInfo } from '../../helpers/fetch'\nimport { Link, useHistory, useParams } from 'react-router-dom'\nimport { handlePageChange } from '../../helpers/handlePageChange'\n\n\nconst Locations = () => {\n    const [locations, setLocations] = useState([])\n    const { page } = useParams()\n    let history = useHistory()\n    const [thisPage, setThisPage] = useState(parseInt(page))\n\n    useEffect(()=>{\n        setThisPage(parseInt(page))\n    }, [page])\n    const classes = useStyles()\n    \n    useEffect(()=>{\n    const getLocations = async () => {\n        const locat = await fetchCardInfo('location', thisPage)\n        setLocations(locat.results)\n    }\n    getLocations()\n}, [thisPage])\n\nreturn locations.length === 0 ? <LoadingPage/> : (\n        <>\n            <Typography variant='h2' align=\"center\" gutterBottom>Locations</Typography>\n            <Typography variant=\"h4\" align='center' gutterBottom>\n                <IconButton color='primary' aria-label=\"Previous page\" onClick={() => {handlePageChange('prev',thisPage, 6, history)}}><ArrowBackIcon /></IconButton>\n                Page {thisPage}\n                <IconButton color='primary' aria-label=\"Next page\" onClick={() => {handlePageChange('next',thisPage, 6, history)}}><ArrowForwardIcon /></IconButton>\n            </Typography>\n            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n                {locations.map(l=> <LocationCard key={l.id} location={l} />)}\n            </Grid>\n\n            <div className={classes.centerContent}>\n                {thisPage !==1 && <IconButton aria-label=\"Previous page\" color='primary' onClick={() => {handlePageChange('prev',thisPage, 6, history)}}><ArrowBackIcon /></IconButton>}\n                <Hidden xsDown>\n                    <Button onClick={handlePageChange} component={Link} to='/locations/1'>1</Button>\n                    <Button onClick={handlePageChange} component={Link} to='/locations/2'>2</Button>\n                    <Button onClick={handlePageChange} component={Link} to='/locations/3'>3</Button>\n                    <Button onClick={handlePageChange} component={Link} to='/locations/4'>4</Button>\n                    <Button onClick={handlePageChange} component={Link} to='/locations/5'>5</Button>\n                    <Button onClick={handlePageChange} component={Link} to='/locations/6'>6</Button>\n                </Hidden>\n                {thisPage !== 6 && <IconButton aria-label=\"Next page\" color='primary' onClick={() => {handlePageChange('next',thisPage, 6, history)}}><ArrowForwardIcon /></IconButton>}\n            </div>\n        </>\n    )\n}\n\nexport default Locations\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textDecoration: 'none',\n    color: 'black',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  offset: theme.mixins.toolbar,\n  image: {\n    marginRight: '10px',\n  },\n}));\n","\nimport React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport useStyles from './navbarStyles'\nimport { Link } from 'react-router-dom';\nimport {  Button, Hidden, Menu, MenuItem } from '@material-ui/core';\n\n\n\nconst Navbar = () => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n\n\n  \n\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" style={{backgroundColor:`rgba( 83, 171, 238, .8)`, color:'black'}}>\n        <Toolbar>\n          <Hidden mdUp>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleMenu}>\n            <MenuIcon />\n          </IconButton>\n          </Hidden>\n          <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem component={Link} to='/characters/1' onClick={handleClose}>Characters</MenuItem>\n                <MenuItem component={Link} to='/locations/1' onClick={handleClose}>Locations</MenuItem>\n                <MenuItem component={Link} to='/episodes/1'onClick={handleClose}>Episodes</MenuItem>\n              </Menu>\n          <img \n              src='/assets/rick-and-morty.png'\n              alt='Commerce.js'\n              height='25px'\n              className={classes.image}\n              />\n          <Typography variant=\"h6\" component={Link} to='/' className={classes.title}>\n              Rick and Morty App\n           </Typography>\n           <Hidden smDown>\n          <Button color='inherit' component={Link} to='/characters/1'>Characters</Button>\n          <Button color='inherit' component={Link} to='/locations/1'>Locations</Button>\n          <Button color='inherit' component={Link} to='/episodes/1'>Episodes</Button>\n           </Hidden>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n    </div>\n  );\n}\nexport default Navbar","import React from 'react';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Characters from '../Components/Characters/Characters';\nimport { CharacterScreen } from '../Components/CharacterScreen/CharacterScreen';\nimport EpisodeCharacters from '../Components/Episodes/EpisodeCharacters/EpisodeCharacters';\nimport Episodes from '../Components/Episodes/Episodes';\nimport Footer from '../Components/Footer/Footer';\nimport LocationCharacters from '../Components/Locations/LocationCharacters/LocationCharacters';\nimport Locations from '../Components/Locations/Locations';\nimport Navbar from '../Components/Navbar/Navbar';\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Navbar />\n      <div>\n        <Switch>\n          <Route exact path='/episodes/:page' component={Episodes} />\n          <Route exact path='/locations/:page' component={Locations} />\n          <Route exact path='/characters/:page' component={Characters} />\n          <Route\n            path='/location/:location/characters'\n            component={LocationCharacters}\n          />\n          <Route\n            path='/episode/:episode/characters'\n            component={EpisodeCharacters}\n          />\n          <Route path='/character/view/:id' component={CharacterScreen} />\n          <Redirect to='/characters/1' />\n        </Switch>\n      </div>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import AppRouter from './Router/AppRouter';\nimport './styles/styles.css'\nimport '@sweetalert2/theme-material-ui/material-ui.scss'\n\nfunction App() {\n  return (\n  <>\n    <AppRouter />\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}